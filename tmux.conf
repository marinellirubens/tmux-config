# ------------------------------------------------------------------------
# plugins activation
# ------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# ------------------------------------------------------------------------


# ------------------------------------------------------------------------
# set options
# ------------------------------------------------------------------------
set-option -g default-shell /usr/bin/zsh
set -g history-limit 2000

# set -g default-terminal "tmux-256color"
# set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"

# set vi mode enabled to use vi commands on tmux
set-window-option -g mode-keys vi

setw -g mouse on
set -g status-position top
set -g pane-border-status top
set -g pane-border-format " [ ###P #T ] "
# set -g pane-border-format " [ ###P #T #{pane_title}] "
# ------------------------------------------------------------------------


# ------------------------------------------------------------------------
# key bindings
# ------------------------------------------------------------------------
# set prefix
set -g prefix C-s

# Reloads this file on a already opened tmux session
unbind r
bind r source-file ~/.config/tmux/tmux.conf\; display-message -d 800 'Source file reloaded ~/.config/tmux/tmux.conf'

bind C-h split-window -h -c "#{pane_current_path}"
bind C-v split-window -v -c "#{pane_current_path}"

# start selecting text with "v"
bind-key -T copy-mode-vi 'v' send -X begin-selection

# select the text with y and send to normal clipboard instead of only tmux clipboard
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# selects the entire line, on vim you would use yy but I put on Y because I can't set two keys for it as yy
bind-key -T copy-mode-vi 'Y' send-keys -X copy-line-and-cancel 'xclip -in -selection clipboard'
# don't exit copy mode when dragging with mouse
unbind -T copy-mode-vi MouseDragEnd1Pane

# paste current buffer
bind P paste-buffer

# Toggle mouse on
bind-key M set-option -g mouse on\; display-message -d 500 'Mouse: ON'

# Toggle mouse off
bind-key m set-option -g mouse off \; display-message -d 500 'Mouse: OFF'

# sinc panes to input on all panes at the same time
bind C-Y set-window-option synchronize-panes \;\
  display-message -d 500 'Toggle syncronizing panes'

# you can use "vim +$" as well, but I don't think that +$ prefix have any sense without the file path argument...
#bind -T multiKeyBindings G split-window "vim"
#bind v switch-client -T multiKeyBindings

bind -T multiKeyK k respawn-pane -k\; display-message -d 500 'Respawn pane'
bind k switch-client -T multiKeyK


bind -T multiKeyO n new-window "nvim"
bind -T multiKeyO h new-window "htop"
#bind -T multiKeyO t respawn-pane -k
bind O switch-client -T multiKeyO

bind c new-window -c "~"
# ------------------------------------------------------------------------

bind-key C-k clear-history
#bind -n C-k clear-history

# ------------------------------------------------------------------------
# retoration for last session
# ------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Restore Panes
set -g @resurrect-capture-pane-contents 'on'

resurrect_dir="~/.tmux/resurrect"
set -g @resurrect-dir $resurrect_dir
set -g @resurrect-processes ':all:'

# Restore last saved environment (automatically)
set -g @continuum-restore 'on'

# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

# have to figure it out, how to do this
# set-option -g default-path "~"
# ------------------------------------------------------------------------


# ------------------------------------------------------------------------
# theme for line
# ------------------------------------------------------------------------
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'mocha' # or frappe, macchiato, mocha

set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator " █"

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#{=|-30|…;s|$HOME|~|:pane_current_path}"

set -g @catppuccin_status_modules_left ""

set -g @catppuccin_status_modules_right "session host"
set -g @catppuccin_directory_text "#{=|-50|…;s|$HOME|~|:pane_current_path}"
set -g @catppuccin_session_text "session: #{session_name}"
set -g @catppuccin_host_text "host: #{host}"
# set -g @catppuccin_directory_text "#{pane_current_path}"
set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"
# ------------------------------------------------------------------------


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
